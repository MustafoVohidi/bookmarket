{"version":3,"sources":["actions/books.js","components/BookCard.jsx","actions/filter.js","components/Filter.jsx","containers/Filter.js","components/App.jsx","containers/App.js","reducers/books.js","reducers/cart.js","reducers/filter.js","reducers/index.js","index.js","store.js"],"names":["setBooks","books","type","payload","BookCard","title","author","price","image","onAdd","Card","Image","src","Content","Header","Meta","className","extra","Icon","name","Button","onClick","setFilter","filter","setSearchQuery","value","Filter","filterBy","searchQuery","Menu","secondary","Item","active","bind","Input","icon","onChange","e","target","placeholder","connect","dispatch","bindActionCreators","filterActions","App","this","props","axios","get","then","data","isReady","Container","handleItemClick","position","Group","itemsPerRow","map","book","i","key","Component","searchBooks","orderBy","sortBy","o","toLowerCase","indexOf","filterBooks","items","booksActions","initialState","combineReducers","state","action","cart","id","store","createStore","rootReducer","applyMiddleware","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb03b2cb.chunk.js","sourcesContent":["export const setBooks=books=>({\r\n    type:'SET_BOOKS',\r\n    payload: books\r\n});","import React from 'react'\r\nimport { Card, Icon, Image, Button } from 'semantic-ui-react'\r\n\r\nconst BookCard = ({ title, author, price, image, onAdd }) => (\r\n    <Card>\r\n        <Image src={image} />\r\n        <Card.Content>\r\n            <Card.Header>\r\n                {title}\r\n            </Card.Header>\r\n            <Card.Meta>\r\n                <span className='date'>\r\n                    {author}\r\n                </span>\r\n            </Card.Meta>\r\n\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n            <a>\r\n                <Icon name='user' />\r\n                {price}\r\n            </a>\r\n        </Card.Content>\r\n        <Button onClick={onAdd}>Добавить в корзину</Button>\r\n    </Card>\r\n)\r\n\r\nexport default BookCard;","export const setFilter=filter=>({\r\ntype:'SET_FILTER',\r\npayload:filter\r\n});\r\n\r\nexport const setSearchQuery=value=>({\r\n    type:'SET_QUERY',\r\n    payload:value\r\n    });\r\n    \r\n","import React from 'react';\r\nimport { Input, Menu, Search } from 'semantic-ui-react';\r\nimport { setSearchQuery } from '../actions/filter';\r\n\r\n\r\nconst Filter = ({setFilter, filterBy, searchQuery, setSearchQuery})=>\r\n\r\n(\r\n    <Menu secondary>\r\n        <Menu.Item\r\n            active={filterBy === 'all'}\r\n            onClick={setFilter.bind(this, 'all')} >\r\n            Все</Menu.Item>\r\n        <Menu.Item\r\n            active={filterBy === 'popular'}\r\n            onClick={setFilter.bind(this, 'popular')}\r\n        >Популярные</Menu.Item>\r\n        <Menu.Item\r\n            active={filterBy === 'price_high'}\r\n            onClick={setFilter.bind(this, 'price_high')}\r\n        >Цена (дорогие)</Menu.Item>\r\n        <Menu.Item\r\n            active={filterBy === 'price_low'}\r\n            onClick={setFilter.bind(this, 'price_low')}\r\n        >Цена (дешевые)</Menu.Item>\r\n\r\n        <Menu.Item\r\n            active={filterBy === 'author'}\r\n            onClick={setFilter.bind(this, 'author')}\r\n        >Автор</Menu.Item>\r\n         <Menu.Item>\r\n           <Input icon=\"search\" \r\n           onChange={e=>setSearchQuery(e.target.value)}\r\n            value={searchQuery} \r\n            placeholder=\"Введите запрос...\"/>\r\n        </Menu.Item>\r\n\r\n    </Menu>\r\n)\r\n\r\n\r\nexport default Filter;\r\n\r\n","import { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as filterActions from '../actions/filter';\r\nimport Filter from '../components/Filter'\r\n\r\nconst mapStateToProps = ({ filter }) => ({\r\n    filterBy: filter.filterBy,\r\n    });\r\n  const mapDispatchToProps = dispatch => ({\r\n    ...bindActionCreators(filterActions, dispatch)\r\n  });  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n  \r\n\r\n","import React, { Component } from 'react';\nimport { Container, Card } from 'semantic-ui-react';\nimport axios from 'axios';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Menu } from 'semantic-ui-react';\nimport BookCard from './BookCard';\nimport Filter from '../containers/Filter';\n// import Menu from '../containers/Menu';\n\n\nclass App extends Component {\n\n  componentWillMount() {\n    const { setBooks } = this.props;\n    axios.get('/books.json').then(({ data }) => {\n      setBooks(data);\n    });\n  }\n\n  render() {\n    const { books, isReady } = this.props;\n    return (\n      <Container>\n\n        <Menu />\n        <Menu>\n          <Menu.Item name='browse' onClick={this.handleItemClick}>\n            Магазин Книг\n        </Menu.Item>\n\n          <Menu.Menu position='right'>\n            <Menu.Item name='signup' onClick={this.handleItemClick}>\n              Итого: &nbsp; <b>0</b> руб.\n    </Menu.Item>\n\n\n            <Menu.Item name='help' onClick={this.handleItemClick}  >\n              Корзина (<b>0</b>)\n     </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n\n        <Filter/>\n        <Card.Group itemsPerRow={4}>\n\n          {!isReady\n            ? 'Загрузка...'\n            : books.map((book,i) =>\n              <BookCard key={i} {...book} />\n            )\n          }\n         </Card.Group>\n\n      </Container>\n    );\n  }\n}\n\n\nexport default (App);\n","import { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as booksActions from '../actions/books';\r\nimport App from '../components/App';\r\nimport orderBy from 'lodash/orderBy';\r\n\r\n\r\n// Сортировка товаров\r\nconst sortBy = (books, filterBy) => {\r\n\r\n  switch (filterBy) {\r\n    // case 'all':\r\n    //   return books;\r\n    case 'price_high':\r\n      return orderBy(books, 'price', 'desc');\r\n    case 'price_low':\r\n      return orderBy(books, 'price', 'asc')\r\n    case 'author':\r\n      return orderBy(books, 'author', 'desc')\r\n    case 'popular':\r\n      return orderBy(books, 'popular', 'desc')\r\n    default:\r\n      return books;\r\n  }\r\n}\r\n\r\nconst filterBooks = (books, searchQuery) =>\r\n  books = books.filter(\r\n    o =>\r\n      o.title.toLowerCase().indexOf(searchQuery.toLowerCase())>=0||\r\n      o.author.toLowerCase().indexOf(searchQuery.toLowerCase())>=0,\r\n  );\r\nconst searchBooks = (books, filterBy, searchQuery) => {\r\n  return sortBy(filterBooks(books, searchQuery),filterBy);\r\n}\r\n\r\nconst mapStateToProps = ({ books, filter }) => ({\r\n  books:\r\n    books.items &&\r\n    searchBooks(books.items, filter.filterBy, filter.searchQuery),\r\n  isReady: books.isReady\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  ...bindActionCreators(booksActions, dispatch),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","const initialState = {\r\n    isReady: false,\r\n    items: null,\r\n    filterBy: 'all'\r\n};\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_BOOKS':\r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                isReady: true\r\n            };\r\n\r\n        case 'SET_IS_READY':\r\n            return {\r\n                ...state,\r\n                isReady: action.payload\r\n            };\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n\r\n    items:[]\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_BOOK':\r\n            return {\r\n                ...state,\r\n                items:[\r\n                    ...state.items,\r\n                    action.payload\r\n                ],  \r\n                \r\n            };\r\n    \r\n        case 'REMOVE_BOOK':\r\n            return{\r\n                ...state,\r\n              items:state.items.filter(o=>o.id!=action.payload)\r\n            };\r\n            break;\r\n            default:\r\n                return state;\r\n    }\r\n};\r\n\r\n","const initialState = {\r\n\r\nsearchQuery:'',\r\n    filterBy:'all'\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_QUERY':\r\n            return {\r\n                ...state,\r\n                searchQuery:  action.payload,\r\n            };\r\n        case 'SET_FILTER':\r\n            return {\r\n                ...state,\r\n                filterBy:  action.payload,\r\n            };\r\n\r\n            default:\r\n                return state;\r\n    }\r\n};\r\n\r\n","import { combineReducers } from 'redux';\r\nimport books from './books';\r\nimport cart from './cart'\r\nimport filter from './filter'\r\nexport default  combineReducers({\r\n    books,\r\n    cart,\r\n    filter,\r\n});\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './containers/App';\nimport createStore from './store';\nimport './app.css';\n\nconst store=createStore();\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n","import { createStore, applyMiddleware } from 'redux'\r\nimport logger from'redux-logger';\r\nimport rootReducer from './reducers';\r\n\r\n\r\nexport default ()=>{\r\n    const store = createStore(rootReducer, applyMiddleware(logger));\r\nreturn store;\r\n};\r\n\r\n\r\n"],"sourceRoot":""}